<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">

    <bean id="validator"
          class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <!--声明输入验证的提供者是hibernate-->
        <property name="providerClass"
                  value="org.hibernate.validator.HibernateValidator"/>

    </bean>

    <mvc:annotation-driven validator="validator"/>

    <!--注解扫描的根路径-->
    <context:component-scan base-package="com.baidu"/>

    <!--将静态页面的处理交由web服务器自己处理, springmvc不处理-->
    <mvc:default-servlet-handler/>

    <!--静态资源扫描路径-->
    <mvc:resources mapping="images/**" location="/resources/images/"/>
    <mvc:resources mapping="js/**" location="/resources/js/"/>
    <mvc:resources mapping="styles/**" location="/resources/styles/"/>

    <!--配置视图解析规则-->
    <bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass"
                  value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/pages/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--引入db属性文件-->
    <context:property-placeholder location="classpath:db.properties"/>

    <!--1. 配置数据源-->
    <bean id="dataSource"
          class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${driver}"/>
        <property name="jdbcUrl" value="${url}"/>
        <property name="user" value="${username}"/>
        <property name="password" value="${password}"/>
    </bean>

    <!--2. 配置SQLSessionFactory对象-->
    <bean id="sessionFactory"
          class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!--引入mybatis的全局配置文件-->
        <property name="mapperLocations" value="classpath*:com/baidu/*/mapper/*.xml"/>
    </bean>

    <!--3. 配置事务-->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--4. 配置事务属性-->
    <tx:advice id="txAdvice"
               transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <!--5. 配置切面-->
    <aop:config>
        <aop:pointcut id="pointcut"
                      expression="execution(* com.baidu.*.service.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut"/>
    </aop:config>

    <!--6. 配置Mybatis中的mapper接口自动扫描-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--mapper接口代理对象所在的包-->
        <property name="basePackage" value="com.baidu.cost.mapper"/>

        <!--定义sessionFactory, 引用上面配置的工厂对象-->
        <property name="sqlSessionFactoryBeanName" value="sessionFactory"/>
    </bean>

    <!--配置拦截器-->
    <mvc:interceptors>
        <!--拦截器的执行顺序, 按照加入顺序-->
        <mvc:interceptor>
            <!--要拦截的请求路径-->
            <mvc:mapping path="/**"/>
            <!--拦截器所对应的类路径-->
            <bean class="com.baidu.base.interceptor.LoginInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>



</beans>