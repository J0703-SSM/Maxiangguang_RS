<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.baidu.admin.mapper.AdminMapper">

    <resultMap id="adminMap" type="com.baidu.admin.domain.Admin">
        <id column="id" property="adminId"/>
        <result column="name" property="name"/>
        <result column="pwd" property="password"/>
        <result column="code" property="adminCode"/>
        <result column="tel" property="telephone"/>
        <result column="email" property="email"/>
        <result column="date" property="enrolldate"/>
        <result column="role" property="role"/>
        <result column="privilege" property="privilege"/>
    </resultMap>

    <sql id="adminSql">
        admin_info.adminId,
        admin_info.name,
        admin_info.password,
        admin_info.adminCode,
        admin_info.telephone,
        admin_info.email,
        admin_info.enrolldate
    </sql>

    <sql id="roleSql">
        role_info.roleId,
        role_info.roleName
    </sql>

    <sql id="privilegeSql">
        privilege_info.privilegeId,
        privilege_info.privilegeName
    </sql>

    <resultMap id="adminMap1" type="com.baidu.admin.domain.Admin">
        <id column="adminId" property="adminId"/>
        <result column="name" property="name"/>
        <result column="password" property="password"/>
        <result column="adminCode" property="adminCode"/>
        <result column="telephone" property="telephone"/>
        <result column="email" property="email"/>
        <result column="enrolldate" property="enrolldate"/>
        <collection property="roleList"
                    ofType="com.baidu.role.domain.Role">
            <id column="roleId" property="roleId"/>
            <result column="roleName" property="roleName"/>
            <collection property="privilegeList"
                        ofType="com.baidu.privilege.domain.Privilege">
                <id column="privilegeId" property="privilegeId"/>
                <result column="privilegeName" property="privilegeName"/>
            </collection>
        </collection>
    </resultMap>

    <!--登录查询-->
    <select id="findByNameAndPwd"
            parameterType="com.baidu.admin.domain.Admin"
            resultMap="adminMap">
        SELECT a.adminId id, a.name name,a.password pwd,a.adminCode code,a.telephone tel,a.email email,a.enrolldate date,
        group_concat(r.roleName SEPARATOR ',') role, group_concat(p.privilegeName SEPARATOR ',') privilege
        FROM admin_info a ,role_info r, admin_role ar, role_privilege rp, privilege_info p
        WHERE a.adminCode = #{adminCode}
        AND password = #{password}
        AND a.adminId = ar.admin_id
        and ar.role_id = r.roleId
        and r.roleId = rp.role_id
        AND rp.privilege_id = p.privilegeId
        GROUP by a.adminId
    </select>

    <!--根据id查询-->
    <select id="findByAdminId"
            parameterType="com.baidu.admin.domain.Admin"
            resultMap="adminMap">
        SELECT a.adminId id, a.name name,a.password pwd,a.adminCode code,a.telephone tel,
        a.email email,a.enrolldate date,group_concat(r.roleName SEPARATOR ',') role
        FROM admin_info a ,role_info r, admin_role ar WHERE
        a.adminId = #{adminId}
        AND a.adminId = ar.admin_id
        and ar.role_id = r.roleId
        GROUP by a.adminId
    </select>

    <!--根据adminCode查重-->
    <select id="findByAdminCode"
            parameterType="com.baidu.admin.domain.Admin"
            resultType="com.baidu.admin.domain.Admin">
        SELECT * FROM admin_info WHERE adminCode = #{adminCode}
    </select>

    <!--根据email查重-->
    <select id="findByEmail"
            parameterType="com.baidu.admin.domain.Admin"
            resultType="com.baidu.admin.domain.Admin">
        SELECT * FROM admin_info WHERE email = #{email}
    </select>

    <!--根据telephone查重-->
    <select id="findByTel"
            parameterType="com.baidu.admin.domain.Admin"
            resultType="com.baidu.admin.domain.Admin">
        SELECT * FROM admin_info WHERE telephone = #{telephone}
    </select>
    <!--查询全部-->
    <select id="findAll"
            resultType="com.baidu.admin.domain.Admin">
        SELECT * FROM admin_info
    </select>

    <!--查询全部分页-->
    <select id="findAll1"
            parameterType="com.baidu.base.domain.PageBean"
            resultMap="adminMap">
        <!--SELECT-->
        <!--<include refid="adminSql"/>,-->
        <!--<include refid="roleSql"/>,-->
        <!--<include refid="privilegeSql"/>-->
        <!--FROM admin_info-->
        <!--LEFT JOIN (admin_role, role_info, role_privilege, privilege_info)-->
        <!--ON admin_info.adminId = admin_role.admin_id-->
        <!--and admin_role.role_id = role_info.roleId-->
        <!--and role_info.roleId = role_privilege.role_id-->
        <!--and role_privilege.privilege_id = privilege_info.privilegeId-->
        <!--GROUP BY admin_info.adminId limit ${start},${ps}-->
        SELECT a.adminId id, a.name name,a.adminCode code,a.telephone tel,a.email email,a.enrolldate date,group_concat(r.roleName SEPARATOR ',') role
        FROM admin_info a LEFT JOIN (role_info r, admin_role ar)
        ON a.adminId = ar.admin_id
        and ar.role_id = r.roleId
        GROUP BY a.adminId limit ${start},${ps}
    </select>

    <!--高级查询-->
    <select id="findAllByPrivilegeAndRole"
            parameterType="com.baidu.base.domain.PageBean"
            resultMap="adminMap1">
        SELECT
        <include refid="adminSql"/>,
        <include refid="roleSql"/>,
        <include refid="privilegeSql"/>
        FROM admin_info,admin_role, role_info, role_privilege, privilege_info
        WHERE admin_info.adminId = admin_role.admin_id
        and admin_role.role_id = role_info.roleId
        and role_info.roleId = role_privilege.role_id
        and role_privilege.privilege_id = privilege_info.privilegeId
        <if test="roles != null and roles.size > 0">
            <foreach collection="roles"
                     item="name"
                     open="And role_info.roleName in("
                     separator=","
                     close=")">
                #{name}
            </foreach>
        </if>
        <if test="privilegeId != null and privilegeId != '' and privilegeId != -1">
            and privilege_info.privilegeId = #{privilegeId}
        </if>
        GROUP BY admin_info.adminId limit ${start},${ps}


    </select>

    <!--修改密码-->
    <update id="updatePwd"
            parameterType="com.baidu.admin.domain.Admin">
        UPDATE admin_info set password = #{password}
        WHERE adminId = #{adminId}
    </update>


    <!--修改Admin信息-->
    <update id="update"
            parameterType="com.baidu.admin.domain.Admin">
        UPDATE admin_info SET name = #{name},telephone = #{telephone}, email = #{email}
        WHERE adminId = #{adminId}
    </update>

    <!--添加Admin-->
    <insert id="insertAdmin"
            parameterType="com.baidu.admin.domain.Admin">
        INSERT INTO admin_info(adminCode,password,name,telephone,email,enrolldate)
        VALUES (#{adminCode},#{password},#{name},#{telephone},#{email},#{enrolldate})
    </insert>

    <!--添加AdminRole-->
    <insert id="insertAdminAndRole"
            parameterType="com.baidu.admin.domain.domain_ext.AdminExt">
        INSERT INTO admin_role(admin_id, role_id)
        VALUES (#{adminId}, #{roleId})
    </insert>

    <!--删除-->
    <delete id="delete"
            parameterType="com.baidu.admin.domain.Admin">
        DELETE FROM admin_info WHERE adminId = #{adminId}
    </delete>
    <delete id="deleteAdminAndRole"
            parameterType="com.baidu.admin.domain.Admin">
        DELETE FROM admin_role WHERE admin_id = #{adminId}
    </delete>


</mapper>